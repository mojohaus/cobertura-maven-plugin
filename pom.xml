<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>mojo-parent</artifactId>
    <groupId>org.codehaus.mojo</groupId>
    <version>34</version>
  </parent>

  <artifactId>cobertura-maven-plugin</artifactId>
  <version>2.8-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>

  <name>Mojo's Maven plugin for Cobertura</name>
  <url>https://github.com/mojohaus/cobertura-maven-plugin/</url>
  <description>This is the Mojo's Maven plugin for Cobertura. Cobertura is a free Java tool that calculates the percentage of code accessed by
    tests. It can be used to identify which parts of your Java program are lacking test coverage.
    </description>
  <inceptionYear>2005</inceptionYear>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>joakime</id>
      <name>Joakim Erdfelt</name>
      <email>joakim@erdfelt.net</email>
      <roles>
        <role>Java Developer</role>
      </roles>
      <timezone>-5</timezone>
    </developer>
    <developer>
      <id>wgwaltney</id>
      <name>Will Gwaltney</name>
      <email>will.gwaltney@sas.com</email>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
    <developer>
      <id>fgiust</id>
      <name>Fabrizio Giustina</name>
      <email>fgiust@apache.org</email>
      <roles>
        <role>Developer</role>
      </roles>
    </developer>
    <developer>
      <id>aheritier</id>
      <name>Arnaud Heritier</name>
      <email>aheritier@apache.org</email>
      <roles>
        <role>Developer</role>
        <role>Despot</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>rfscholte</id>
      <name>Robert Scholte</name>
      <email>rfscholte@codehaus.org</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>Europe/Amsterdam</timezone>
    </developer>
    <developer>
      <id>bimargulies</id>
      <name>Benson Margulies</name>
      <email>bimargulies@gmail.com</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>-5</timezone>
    </developer>
    <developer>
      <name>Lennart JÃ¶relid</name>
      <email>lj@jguru.se</email>
      <roles>
        <role>Java Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>dennisl</id>
      <name>Dennis Lundberg</name>
      <email>dennisl@codehaus.org</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>Europe/Stockholm</timezone>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>James Carpenter</name>
      <email>jcarpenter621@yahoo.com</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>-6</timezone>
    </contributor>
  </contributors>

  <prerequisites>
    <maven>${mavenVersion}</maven>
  </prerequisites>
  <scm>
        <connection>scm:git:https://github.com/mojohaus/cobertura-maven-plugin.git</connection>
        <developerConnection>scm:git:https://github.com/mojohaus/cobertura-maven-plugin.git</developerConnection>
        <url>https://github.com/mojohaus/cobertura-maven-plugin</url>
      <tag>HEAD</tag>
  </scm>
  <issueManagement>
    <system>Github</system>
    <url>https://github.com/mojohaus/cobertura-maven-plugin/issues</url>
  </issueManagement>

  <properties>
    <!--
      Add a property that can be injected into the site
      mojo.java.target won't work for that
    -->
    <javaVersion>1.6</javaVersion>
    <mojo.java.target>${javaVersion}</mojo.java.target>
    <mavenVersion>2.0.8</mavenVersion> <!-- MNG-3062 -->
    <!-- Remember to update AbstractCoberturaTestCase when upgrading Cobertura -->
    <coberturaVersion>2.1.1</coberturaVersion>
  </properties>
  <!-- from MSITE-459 -->
  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>1.0-beta-7</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
          <configuration>
            <!-- Temporary solution to get a release out using gpg version 1 -->
            <useAgent>false</useAgent>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <dependencies>
    <!-- cobertura plugin deps -->
    <dependency>
      <groupId>net.sourceforge.cobertura</groupId>
      <artifactId>cobertura</artifactId>
      <version>${coberturaVersion}</version>
        <exclusions>
            <exclusion>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
            </exclusion>
            <exclusion>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
            </exclusion>
        </exclusions>
    </dependency>
    <!--
        TODO: Remove these dependencies when Cobertura is released in a version which
        does not include ancient versions of Jaxen and XercesImpl
    -->
    <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.12.2</version>
    </dependency>
    <dependency>
        <groupId>jaxen</groupId>
        <artifactId>jaxen</artifactId>
        <version>1.1.4</version>
    </dependency>
    <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>1.1.3</version>
    </dependency>
    <!--
      runtime has no 3rd party deps.  This allows us to
      pass this dependency into the project's classpath
      at runtime without risk of introducing dep version
      clashes e.g. projects which require an older version of
      asm (namely Hibernate).
    -->
    <dependency>
      <groupId>net.sourceforge.cobertura</groupId>
      <artifactId>cobertura-runtime</artifactId>
      <version>${coberturaVersion}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>urbanophile</groupId>
      <artifactId>java-getopt</artifactId>
      <version>1.0.9</version>
    </dependency>
    <!-- maven plugin deps -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-impl</artifactId>
      <version>2.0.4.2</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.0.24</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-invoker</artifactId>
      <version>2.0.11</version>
    </dependency>
    <!-- testing deps -->
    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-plugin-testing-harness</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <!-- @todo This is here so that we can use SNAPSHOT versions of Cobertura - remove before release -->
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.11</version>
        <configuration>
          <onlyCurrentVersion>true</onlyCurrentVersion>
          <columnNames>Type,Key,Summary,Status,Resolution,Assignee</columnNames>
          <sortColumnNames>Type,Key</sortColumnNames>
          <maxEntries>250</maxEntries>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>jira-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>run-its</id>
      <activation>
        <property>
          <name>skipTests</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-invoker-plugin</artifactId>
            <version>1.6</version>
            <configuration>
              <debug>true</debug>
              <projectsDirectory>src/it</projectsDirectory>
              <preBuildHookScript>setup</preBuildHookScript>
              <postBuildHookScript>verify</postBuildHookScript>
              <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
              <goals>
                <goal>clean</goal>
                <goal>site</goal>
              </goals>
              <settingsFile>src/it/settings.xml</settingsFile>
              <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>install</goal>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>updateLicenseHeaders</id>
      <activation>
        <property>
          <name>updateLicense</name>
        </property>
      </activation>

      <build>
        <plugins>
          <!--
              Copies license data to source files and LICENSE.txt files to artifacts.

              Why:  Ensures that licenses are correctly provided.
              Used: Standard lifecycle. mvn process-sources, mvn generate-sources.
          -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>1.5</version>
            <configuration>
              <canUpdateDescription>true</canUpdateDescription>
              <failOnMissingHeader>true</failOnMissingHeader>
              <acceptPomPackaging>true</acceptPomPackaging>
              <licenseName>apache_v2</licenseName>
              <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
              <roots>
                <root>src/main</root>
                <root>src/test</root>
                <root>src/site</root>
              </roots>
            </configuration>
            <executions>
              <execution>
                <id>update-file-header</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>update-file-header</goal>
                </goals>
              </execution>
              <execution>
                <id>add-license</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>update-project-license</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
